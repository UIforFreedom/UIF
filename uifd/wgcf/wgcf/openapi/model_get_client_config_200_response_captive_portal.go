/*
 * untitled API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 536
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetClientConfig200ResponseCaptivePortal struct for GetClientConfig200ResponseCaptivePortal
type GetClientConfig200ResponseCaptivePortal struct {
	Name string `json:"name"`
	Networks []GetClientConfig200ResponseNetworks `json:"networks"`
}

// NewGetClientConfig200ResponseCaptivePortal instantiates a new GetClientConfig200ResponseCaptivePortal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetClientConfig200ResponseCaptivePortal(name string, networks []GetClientConfig200ResponseNetworks, ) *GetClientConfig200ResponseCaptivePortal {
	this := GetClientConfig200ResponseCaptivePortal{}
	this.Name = name
	this.Networks = networks
	return &this
}

// NewGetClientConfig200ResponseCaptivePortalWithDefaults instantiates a new GetClientConfig200ResponseCaptivePortal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetClientConfig200ResponseCaptivePortalWithDefaults() *GetClientConfig200ResponseCaptivePortal {
	this := GetClientConfig200ResponseCaptivePortal{}
	return &this
}

// GetName returns the Name field value
func (o *GetClientConfig200ResponseCaptivePortal) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseCaptivePortal) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetClientConfig200ResponseCaptivePortal) SetName(v string) {
	o.Name = v
}

// GetNetworks returns the Networks field value
func (o *GetClientConfig200ResponseCaptivePortal) GetNetworks() []GetClientConfig200ResponseNetworks {
	if o == nil  {
		var ret []GetClientConfig200ResponseNetworks
		return ret
	}

	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value
// and a boolean to check if the value has been set.
func (o *GetClientConfig200ResponseCaptivePortal) GetNetworksOk() (*[]GetClientConfig200ResponseNetworks, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Networks, true
}

// SetNetworks sets field value
func (o *GetClientConfig200ResponseCaptivePortal) SetNetworks(v []GetClientConfig200ResponseNetworks) {
	o.Networks = v
}

func (o GetClientConfig200ResponseCaptivePortal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableGetClientConfig200ResponseCaptivePortal struct {
	value *GetClientConfig200ResponseCaptivePortal
	isSet bool
}

func (v NullableGetClientConfig200ResponseCaptivePortal) Get() *GetClientConfig200ResponseCaptivePortal {
	return v.value
}

func (v *NullableGetClientConfig200ResponseCaptivePortal) Set(val *GetClientConfig200ResponseCaptivePortal) {
	v.value = val
	v.isSet = true
}

func (v NullableGetClientConfig200ResponseCaptivePortal) IsSet() bool {
	return v.isSet
}

func (v *NullableGetClientConfig200ResponseCaptivePortal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetClientConfig200ResponseCaptivePortal(val *GetClientConfig200ResponseCaptivePortal) *NullableGetClientConfig200ResponseCaptivePortal {
	return &NullableGetClientConfig200ResponseCaptivePortal{value: val, isSet: true}
}

func (v NullableGetClientConfig200ResponseCaptivePortal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetClientConfig200ResponseCaptivePortal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


